/*
Plymouth.SetRefreshFunction: function to be called up to 50 times every second
Plymouth.SetBootProgressFunction: the callback function is called with two numbers, time spent booting so far and the progress (between 0 and 1)
Plymouth.SetRootMountedFunction: the callback function is called when a new root is mounted
Plymouth.SetKeyboardInputFunction: the callback function is called with a string containing a new character entered on the keyboard
Plymouth.SetUpdateStatusFunction: the callback function is called with the new boot status string
Plymouth.SetDisplayPasswordFunction: the callback function is called when the display should display a password dialogue. First arg is prompt string, the second is the number of bullets.
Plymouth.SetDisplayQuestionFunction: the callback function is called when the display should display a question dialogue. First arg is prompt string, the second is the entry contents.
Plymouth.SetDisplayNormalFunction: the callback function is called when the display should return to normal
Plymouth.SetMessageFunction: the callback function is called when new message should be displayed. First arg is message to display. e.g.
*/

global.status = "normal";
global.background;
global.qrcode;
global.scaling_factor;
global.message;
global.input;

fun init () {
  /* Multi Display Support */
  Window.GetMaxWidth = fun () {
    i = 0;
	  width = 0;
	  while (Window.GetWidth(i)) {
		  width = Math.Max(width, Window.GetWidth(i));
		  i++;
	  }
	  return width;
  };

  Window.GetMaxHeight = fun () {
  	i = 0;
	  height = 0;
	  while (Window.GetHeight(i)) {
		  height = Math.Max(height, Window.GetHeight(i));
		  i++;
	  }
	  return height;
  };
}

fun dialog_setup () {
  scaling_factor = Window.GetMaxHeight() / 768;

  background.image = Image("background.png").Scale(Window.GetMaxWidth(),
                                                   Window.GetMaxHeight());
  background.sprite = SpriteNew();
  background.sprite.SetImage(background.image);
  background.sprite.SetPosition(Window.GetX(), Window.GetY(), -1);

  qrcode.org_image = Image("qrcode.png");
  qrcode.image = qrcode.org_image.Scale(scaling_factor * qrcode.org_image.GetWidth(),
                                        scaling_factor * qrcode.org_image.GetHeight());
  qrcode.sprite = Sprite(qrcode.image);
  qrcode.sprite.SetPosition(Window.GetWidth() / 2 - qrcode.image.GetWidth() / 2,
                            Window.GetHeight() / 2 - qrcode.image.GetHeight() / 2,
                            1);
  qrcode.sprite.SetOpacity(0);
}

fun set_message (text) {
  local.image;
  local.org_image;
  org_image = Image.Text(text, 1, 1, 1);
  image = org_image.Scale(scaling_factor * org_image.GetWidth(),
                          scaling_factor * org_image.GetHeight());

  message = Sprite(image);
  message.SetOpacity(1);
  message.SetPosition(Window.GetWidth() / 2 - image.GetWidth() / 2,
                      qrcode.sprite.GetY() + qrcode.image.GetHeight() +
                      image.GetHeight(), 1);
}

fun set_input (text) {
  local.image;
  local.org_image;
  org_image = Image.Text(text, 1, 0, 0);
  image = org_image.Scale(scaling_factor * org_image.GetWidth(),
                          scaling_factor * org_image.GetHeight());

  input = Sprite(image);
  input.SetOpacity(1);
  input.SetPosition(Window.GetWidth() / 2 - image.GetWidth() / 2,
                      qrcode.sprite.GetY() + qrcode.image.GetHeight() +
                      2 * image.GetHeight(), 1);
}

fun display_normal_callback () {
  status = "normal";
  qrcode.sprite.SetOpacity(0);
}

fun display_password_callback (prompt, bullets) {
  status = "password";
  qrcode.sprite.SetOpacity(0);
  set_message(prompt);
  local.entry_text = "";
  for(index = 0; index < bullets; index++) {
    entry_text = entry_text + "*";
  }
  set_input(entry_text);
}

fun display_question_callback (prompt, entry_text) {
  status = "question";
  qrcode.sprite.SetOpacity(1);
  set_message(prompt);
  set_input(entry_text);
}

fun display_message_callback (text) {
  status = "message";
  qrcode.sprite.SetOpacity(0);
  set_message(text);
}

init();
/* preload all images */
dialog_setup();

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);
Plymouth.SetDisplayQuestionFunction(display_question_callback);
Plymouth.SetMessageFunction(display_message_callback);
